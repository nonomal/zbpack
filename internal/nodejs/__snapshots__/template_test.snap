
[TestTemplate_BuildCmd_Bun - 1]
# Install bun if we need it
FROM oven/bun:1.2 AS bun-runtime
FROM node:18 AS build

ENV PORT=8080
WORKDIR /src
# Copy the bun binary from the bun-runtime stage directly.
# A bit hacky but it works.
COPY --from=bun-runtime /usr/local/bin/bun /usr/local/bin
COPY --from=bun-runtime /usr/local/bin/bunx /usr/local/bin

# Check if we have 'corepack' available; if none, we
# install corepack@0.10.0.
RUN which corepack || npm install -g --force corepack@0.10.0
RUN corepack enable

RUN bun install

COPY . .
# Build if we can build it


EXPOSE 8080
CMD bun start main.ts

---

[TestTemplate_BuildCmd_NOutputDir - 1]
FROM node:18 AS build

ENV PORT=8080
WORKDIR /src

# Check if we have 'corepack' available; if none, we
# install corepack@0.10.0.
RUN which corepack || npm install -g --force corepack@0.10.0
RUN corepack enable

RUN yarn install

COPY . .
# Build if we can build it
RUN yarn build

FROM scratch AS output
COPY --from=build /src/ /


---

[TestTemplate_BuildCmd_OutputDir - 1]
FROM node:18 AS build

ENV PORT=8080
WORKDIR /src

# Check if we have 'corepack' available; if none, we
# install corepack@0.10.0.
RUN which corepack || npm install -g --force corepack@0.10.0
RUN corepack enable

RUN yarn install

COPY . .
# Build if we can build it
RUN yarn build

FROM scratch AS output
COPY --from=build /src///app/dist /

FROM zeabur/caddy-static AS runtime
COPY --from=output / /usr/share/caddy



---

[TestTemplate_Bun - 1]
# Install bun if we need it
FROM oven/bun:1 AS bun-runtime
FROM node:18 AS build

ENV PORT=8080
WORKDIR /src
# Copy the bun binary from the bun-runtime stage directly.
# A bit hacky but it works.
COPY --from=bun-runtime /usr/local/bin/bun /usr/local/bin
COPY --from=bun-runtime /usr/local/bin/bunx /usr/local/bin

# Check if we have 'corepack' available; if none, we
# install corepack@0.10.0.
RUN which corepack || npm install -g --force corepack@0.10.0
RUN corepack enable

RUN bun install

COPY . .
# Build if we can build it


EXPOSE 8080
CMD bun start main.ts

---

[TestTemplate_Monorepo - 1]
FROM node:18 AS build

ENV PORT=8080
WORKDIR /src

# Check if we have 'corepack' available; if none, we
# install corepack@0.10.0.
RUN which corepack || npm install -g --force corepack@0.10.0
RUN corepack enable

WORKDIR /src/myservice
RUN yarn install


# Build if we can build it


EXPOSE 8080
CMD yarn start

---

[TestTemplate_MonorepoServerless - 1]
FROM node:18 AS build

ENV PORT=8080
WORKDIR /src

# Check if we have 'corepack' available; if none, we
# install corepack@0.10.0.
RUN which corepack || npm install -g --force corepack@0.10.0
RUN corepack enable

WORKDIR /src/myservice
RUN yarn install


# Build if we can build it


FROM scratch AS output
COPY --from=build /src/myservice /


---

[TestTemplate_MonorepoServerlessOutDir - 1]
FROM node:18 AS build

ENV PORT=8080
WORKDIR /src

# Check if we have 'corepack' available; if none, we
# install corepack@0.10.0.
RUN which corepack || npm install -g --force corepack@0.10.0
RUN corepack enable

WORKDIR /src/myservice
RUN yarn install


# Build if we can build it


FROM scratch AS output
COPY --from=build /src/myservice//app/dist /

FROM zeabur/caddy-static AS runtime
COPY --from=output / /usr/share/caddy



---

[TestTemplate_NBuildCmd_NOutputDir - 1]
FROM node:18 AS build

ENV PORT=8080
WORKDIR /src

# Check if we have 'corepack' available; if none, we
# install corepack@0.10.0.
RUN which corepack || npm install -g --force corepack@0.10.0
RUN corepack enable

RUN yarn install

COPY . .
# Build if we can build it


EXPOSE 8080
CMD yarn start

---

[TestTemplate_NBuildCmd_OutputDir_NSPA - 1]
FROM node:18 AS build

ENV PORT=8080
WORKDIR /src

# Check if we have 'corepack' available; if none, we
# install corepack@0.10.0.
RUN which corepack || npm install -g --force corepack@0.10.0
RUN corepack enable

RUN yarn install

COPY . .
# Build if we can build it


EXPOSE 8080
CMD yarn start

---

[TestTemplate_NBuildCmd_OutputDir_SPA - 1]
FROM node:18 AS build

ENV PORT=8080
WORKDIR /src

# Check if we have 'corepack' available; if none, we
# install corepack@0.10.0.
RUN which corepack || npm install -g --force corepack@0.10.0
RUN corepack enable

RUN yarn install

COPY . .
# Build if we can build it


EXPOSE 8080
CMD yarn start

---
